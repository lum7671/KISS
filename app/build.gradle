buildscript {
    repositories {
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
}

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android' version '1.9.10'
    id 'net.ltgt.errorprone' version '4.1.0'  // 안정된 버전으로 설정
}

android {
    buildFeatures {
        buildConfig = true
    }
    defaultConfig {
        applicationId 'kr.lum7671.kiss'
        minSdkVersion 33  // Android 13+ (갤럭시 노트20 울트라 호환) - 사용자 설정 유지
        compileSdk = 35
        targetSdkVersion 35
        versionCode 407
        versionName "4.0.7"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // BuildConfig에 업스트림 버전 정보 추가
        buildConfigField "String", "UPSTREAM_VERSION", '"3.22.1"'
        buildConfigField "String", "UPSTREAM_VERSION_CODE", '"214"'
        buildConfigField "String", "OPTIMIZED_BY", '"lum7671"'
        buildConfigField "String", "BUILD_DATE", "\"${new Date().format('yyyy-MM-dd')}\""
        
        // 프로파일링을 위한 설정 (Android 15+에서 모든 기능 지원)
        manifestPlaceholders = [
            profileable: "true"
        ]
    }
    
    signingConfigs {
        debug {
            enableV2Signing = true
            enableV3Signing = true
        }
    }
    
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.debug  // 디버그 키로 서명
            
            // 빌드 타입 정보 추가
            buildConfigField "String", "BUILD_TYPE", '"release"'
        }
        debug {
            // fr.neamar.kiss 패키지명 사용
            
            // 빌드 타입 정보 추가
            buildConfigField "String", "BUILD_TYPE", '"debug"'
        }
        profile {
            // Android 15+ 고급 프로파일링을 위한 빌드 타입
            // fr.neamar.kiss 패키지명 사용
            debuggable true
            minifyEnabled false
            shrinkResources = false
            // 프로파일링을 위해 최적화 비활성화
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            
            // 빌드 타입 정보 추가
            buildConfigField "String", "BUILD_TYPE", '"profile"'
            
            // Android 15+ 프로파일링 최적화
            manifestPlaceholders.putAll([
                profileable: "true",
                enableOnDeviceAbi: "true"
            ])
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += [
            '-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
        ]
    }

    lint {
        checkAllWarnings = true
        lintConfig = file('lint.xml')
        baseline = file("lint-baseline.xml")
    }

    namespace = 'fr.neamar.kiss'
    
    // Java 컴파일러 설정
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    
    // Kotlin 컴파일러 설정
    kotlinOptions {
        jvmTarget = '17'
    }
    
    // 컴파일 옵션 설정 (deprecation 경고 포함)
    tasks.withType(JavaCompile) {
        options.compilerArgs += ['-Xlint:deprecation', '-Xlint:unchecked']
    }
}

dependencies {
    // Kotlin & Coroutines 지원
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.10"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'  // LifecycleScope 지원
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0' // ViewModelScope 지원
    
    androidTestImplementation 'androidx.test:runner:1.5.2'         // 버전 통일
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'  // 버전 통일
    androidTestImplementation 'androidx.test:rules:1.5.0'          // 버전 통일

    implementation 'androidx.annotation:annotation:1.9.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.fragment:fragment:1.6.2'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'

    // 성능 분석 & 디버깅 도구들 (DEBUG 빌드에만 포함)
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.14'  // 메모리 누수 탐지
    debugImplementation 'com.facebook.flipper:flipper:0.265.0'             // Facebook Flipper - 종합 디버깅
    debugImplementation 'com.facebook.soloader:soloader:0.12.1'            // Flipper 의존성
    debugImplementation 'com.facebook.flipper:flipper-network-plugin:0.265.0' // 네트워크 분석
    
    // 성능 모니터링 (DEBUG/PROFILE 빌드에만 포함)
    debugImplementation 'androidx.benchmark:benchmark-macro-junit4:1.3.3'   // 벤치마크 테스트
    profileImplementation 'androidx.benchmark:benchmark-macro-junit4:1.3.3' // 프로파일 빌드용
    debugImplementation 'androidx.tracing:tracing:1.2.0'                    // 시스템 추적
    profileImplementation 'androidx.tracing:tracing:1.2.0'                  // 프로파일 빌드용
    
    // 고급 성능 프로파일링 도구들 (PROFILE 빌드 전용)
    profileImplementation 'androidx.startup:startup-runtime:1.1.1'          // 시작 시간 추적
    profileImplementation 'androidx.profileinstaller:profileinstaller:1.3.1' // ART 프로파일 설치
    
    // 메모리 & CPU 모니터링 (PROFILE 빌드 전용)  
    profileImplementation 'androidx.work:work-runtime:2.9.1'                // 백그라운드 작업 모니터링
    profileImplementation 'androidx.concurrent:concurrent-futures:1.1.0'    // 동시성 추적
    profileImplementation 'androidx.lifecycle:lifecycle-process:2.7.0'      // 프로세스 라이프사이클 추적
    
    // 네트워크 & I/O 프로파일링 (PROFILE 빌드 전용)
    profileImplementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'  // HTTP 로깅
    profileImplementation 'androidx.datastore:datastore-preferences:1.0.0'  // 데이터 저장 성능 추적
    
    // ANR (Application Not Responding) 탐지
    debugImplementation 'com.github.anrwatchdog:anrwatchdog:1.4.0'         // ANR 감지
    
    // 메모리 분석 도구
    debugImplementation 'com.squareup.curtains:curtains:1.2.5'             // 액티비티 라이프사이클 모니터링

    // 이미지 로딩 및 캐싱 최적화
    implementation 'com.github.bumptech.glide:glide:4.16.0'                 // Google Glide - 이미지 로딩/캐싱
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'         // Glide 컴파일러
    implementation 'androidx.collection:collection:1.4.5'                   // LruCache 등 컬렉션 유틸리티
    
    // Shizuku - 루트 권한 대안으로 시스템 API 접근
    implementation 'dev.rikka.shizuku:api:13.1.5'                          // Shizuku API
    implementation 'dev.rikka.shizuku:provider:13.1.5'                     // Shizuku Provider

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.4'      // 최신 버전 유지
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.4'   // 최신 버전 유지
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.11.4')      // 최신 버전 유지
    testImplementation 'org.hamcrest:hamcrest-library:3.0'               // 최신 버전 유지

    errorprone('com.google.errorprone:error_prone_core:2.42.0')          // 2.40.0 → 2.42.0
}

tasks.withType(JavaCompile).configureEach {
    options.errorprone {
        disableWarningsInGeneratedCode = true
        disable('MissingOverride')
        disable('MissingSummary')
        disable('EmptyBlockTag')
        disable('EmptyCatch')
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}
